# Encrypted By D3V TRIICK3R
 # Github : https://github.com/khoffmaker
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))
